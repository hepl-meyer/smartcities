#Ce code est la fonction qui nous permet d'utiliser plus simplement le servo moteur dans notre code
#Ce code définit une classe SERVO qui permet de contrôler un servomoteur connecté à une broche donnée.
#La méthode turn(self, val) définit la fréquence du signal PWM à 100 Hz et envoie une valeur correspondant à l'angle
#de rotation souhaité au servomoteur.
#La valeur est convertie en pourcentage et multipliée par 13000 (valeur maximale du signal PWM) et
#4000 (valeur minimale du signal PWM).
from machine import Pin, PWM
class SERVO:
    def __init__(self, pin):
        self.pin = pin
        self.pwm = PWM(self.pin)
    def turn(self, val):
        self.pwm.freq(100)
        self.pwm.duty_u16(int(val/180*13000+4000))
        
        
        
from machine import Pin,PWM
from utime import sleep
from servo import SERVO
#On initialise le servo sur une pin à l'aide d'une fonction prédéfinie.
servo=SERVO(Pin(20))
#Ce code fait tourner un servomoteur entre 20 et 150 degrés 10 fois.
#Après chaque tour, il y a une pause de 1 seconde.
for i in range(10):
    servo.turn(20)
    sleep(1)
    
    servo.turn(150)
    sleep(1)
"""
#Ce code fait tourner un servomoteur entre 100 et 150 degrés de manière continue.
#Le servomoteur réduit son angle de 1 degré à chaque itération et s'arrête à 100 degrés.
#Après chaque tour, il y a une pause de 0,1 secondes.
a=180
while True:
    a=a==100 and 150 or a-1
    servo.turn(a)
    sleep(0.1)
"""
