
from ws2812 import WS2812
import time
#on définit huit couleurs différentes en utilisant des tuples RGB.
BLACK =(0,0,0)
RED=(255,0,0)
YELLOW=(255,150,0)
GREEN=(0,255,0)
CYAN=(0,255,255)
BLUE=(0,0,255)
PURPLE=(180,0,255)
WHITE=(255,255,255)
COLORS=(BLACK,RED,YELLOW,GREEN,CYAN,BLUE,PURPLE,WHITE)
#On crée une instance de la classe WS2812 en spécifiant le port GPIO et le nombre de LED dans la bande (ici, une seule LED).
led = WS2812(18,1)
#Le programme affiche ensuite les couleurs en utilisant la fonction "pixels_fill" pour remplir la bande entière
#avec chaque couleur de la liste, suivie de la fonction "pixels_show" pour afficher les couleurs sur la bande.
#Le programme attend ensuite 0,2 seconde avant de passer à la couleur suivante.
# print("fills")
# for color in COLORS:
#     led.pixels_fill(color)
#     led.pixels_show()
#     time.sleep(0.2)
#Ensuite, le programme utilise la fonction "color_chase" pour afficher une animation de poursuite de chaque couleur de la liste.
#Cette fonction allume une LED à la fois, en déplaçant la couleur d'une LED à l'autre avec un délai spécifié.
print("chases")
for color in COLORS:
    led.color_chase(color,0.1)
#Enfin, le programme utilise la fonction "rainbow_cycle" pour afficher une animation de cycle arc-en-ciel sur la bande.
#Cette fonction allume chaque LED de la bande avec une couleur différente de l'arc-en-ciel,
#en bouclant sur toutes les couleurs possibles.
#Le paramètre 0 dans la fonction indique que la vitesse de défilement de l'arc-en-ciel est déterminée par la bibliothèque en
#fonction du nombre de LED dans la bande.
print("rainbow")
led.rainbow_cycle(0)
